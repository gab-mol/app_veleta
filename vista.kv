#:import utils kivy.utils
<ScMg>
    ciud_input: ciud_resp.text
    Screen:
        name: "eleg_loc"
        MDBoxLayout:
            orientation: 'vertical'
            canvas.before:
                Color:
                    rgb: utils.get_color_from_hex('#ff9800')
                Line:
                    points:  self.center_x-280, self.center_y+180,     self.center_x+280, self.center_y+180,    self.center_x-280, self.center_y+180,       self.center_x-280, self.center_y-365,       self.center_x+280, self.center_y-365,       self.center_x+280, self.center_y+180
                    width: 5
            MDTopAppBar:
                title: "Búsqueda de localidades"
                right_action_items: [["weather-windy",lambda x: app.volver_main()]]
            MDBoxLayout:
                orientation: 'vertical'
                spacing: 10
                MDBoxLayout:
                    orientation: 'horizontal'
                    size_hint: 1, .15
                    padding: [15,0,15,0]
                    spacing: 8
                    MDTextField:
                        id: ciud_resp
                        size_hint: .6, 1
                        pos_hint: {'top': .9}
                        font_size: 55
                        hint_text: "Ciudad..."
                        mode: "rectangle"
                        max_text_length: 40
                        helper_text: "Escribir"
                    MDRaisedButton:
                        pos_hint: {'top': .84}
                        size_hint: .4, .94
                        text: "Buscar"
                        font_size: 30
                        bold: True
                        md_bg_color: '#ff9800'
                        on_release: root.buscar_ciud()
                MDBoxLayout:
                    padding: [25,40,25,35]
                    size_hint: 1, .85
                    ScrollView:
                        MDList:
                            id: list_ciud
                            bg_color: 1,1,1,.1
                            text_color: utils.get_color_from_hex('#ff9800')
    Screen:
        name: "main"
        MDTopAppBar:
            id: topb
            elevation: 1
            title: "[size=20]Condiciones en "+root.localid+"[/size]"
            markup: True
            pos_hint: {'top': 1}
            size_hint: 1, .07
            right_action_items: 
                [
                ["information-outline",lambda x: banner.show()],
                ["home-city-outline",lambda x: app.pantalla("eleg_loc")]
                ]
        MDBanner:
            id: banner
            type: "two-line"
            text: ["Datos descargados a las: "+root.tstamp_f, "Coordenadas: "+root.coord]
            over_widget: meteo
            vertical_pad: topb.height
            right_action: ["Sobre App.", lambda x: app.vent_info()]
        MDBoxLayout:
            id: meteo
            orientation: 'vertical'
            padding: [20, 5, 20, 20]
            spacing: 5
            size_hint_y: None # importante
            height: Window.height - topb.height
            MDBoxLayout:
                size_hint_y: .05
                spacing: 5
                orientation: 'horizontal'
                MDRaisedButton:
                    pos_hint: {'center_x': 0.5,'center_y': 0.5}
                    size_hint: 1, .95
                    elevation: 1
                    text: "Condiciones actuales [b]"+root.tstamp+"[/b]"
                    markup: True
                    font_size: 15
                    icon: "clock"
                    icon_color: "black"
                    text_color: "black"
                    md_bg_color: '#ff9800'
                    on_press: root.tiempo_ahora()
                MDCard:
                    size_hint: 1, 1
                    md_bg_color: (0,0,0,0)
                    line_color: '#ff9800'
                    canvas:
                        Color:
                            rgb: 1,.6,0
                        Line:
                            points: self.center_x-5, self.center_y+10, self.center_x-5, self.center_y-10
                            width: 1
                    MDRectangleFlatIconButton:
                        pos_hint: {'center_y': 0.5}
                        size_hint_x: self.size_hint_x
                        text: "Pronóstico"
                        markup: True
                        font_size: 15
                        icon: "clock-end"
                        icon_color: "black"
                        text_color: "black"
                        line_color: (0, 0, 0, 0)
                        on_press: root.pronost_tiempo()
                    MDRectangleFlatIconButton:
                        pos_hint: {'center_y': 0.5}
                        size_hint_x: self.size_hint_x
                        text: root.hf
                        halign: "left"
                        markup: True
                        font_size: 15
                        icon: "clock"
                        icon_color: "black"
                        text_color: "black"
                        line_color: (0, 0, 0, 0)
                        on_press: root.hora_pronostico()
            DatTab:
                id: tabla
                spacing: 5
                size_hint: 1, .3
                cols: 2
            MDBoxLayout:
                id: sep
                padding:[0,0,0,20]
                size_hint: 1, .1
            MDFloatLayout:
                size_hint: 1, .6
                id: rosa_v
                padding: 20              
                Image:
                    canvas.before:
                        Color:
                            rgba: utils.get_color_from_hex(root.col_cir)
                        RoundedRectangle:
                            size: (self.height, self.height)
                            pos: (self.center_x-self.center_x*.59, self.center_y-self.center_y*.73) 
                            radius: [self.width, ]
                        Color:
                            rgba: 1,1,1,1
                        RoundedRectangle:
                            size: (self.height*.95, self.height*.95)
                            pos: (self.center_x-self.center_x*.56, self.center_y-self.center_y*.69) 
                            radius: [self.width, ]
                            
                    pos_hint: {'center_x': 0.515,'center_y': 0.45}
                    source: './recursos/dial.png'
                    size: self.texture_size 
                PuntCardLab:
                    pos_hint: {'center_x': 1,'center_y': 1.02}
                    font_size: 25
                    text: "N"
                PuntCardLab:
                    pos_hint: {'center_x': 1.12,'center_y': .97}
                    text: "NNE"
                PuntCardLab:
                    pos_hint: {'center_x': 1.26,'center_y': .871}
                    text: "NE"
                PuntCardLab:
                    pos_hint: {'center_x': 1.34,'center_y': .67}
                    text: "ENE"      
                PuntCardLab:
                    pos_hint: {'center_x': 1,'center_y': -0.11}
                    font_size: 25
                    text: "S"
                PuntCardLab:
                    pos_hint: {'center_x': .625,'center_y': .67}
                    text: "ONO"
                PuntCardLab:
                    pos_hint: {'center_x': .73,'center_y': .871}
                    text: "NO"
                PuntCardLab:
                    pos_hint: {'center_x': .85,'center_y': .975}
                    text: "NNO"
                PuntCardLab:
                    pos_hint: {'center_x': .610,'center_y': .45}
                    font_size: 25
                    text: "O"
                PuntCardLab:
                    pos_hint: {'center_x': .73,'center_y': .05}
                    text: "SO"
                PuntCardLab:
                    pos_hint: {'center_x': .625,'center_y': .24}
                    text: "OSO"
                PuntCardLab:
                    pos_hint: {'center_x': 1.4,'center_y': .455}
                    font_size: 25
                    text: "E"
                PuntCardLab:
                    pos_hint: {'center_x': 1.34,'center_y': .24}
                    text: "ESE"
                PuntCardLab:
                    pos_hint: {'center_x': 1.26,'center_y': .05}
                    text: "SE"
                PuntCardLab:
                    pos_hint: {'center_x': 1.12,'center_y': -0.07}
                    text: "SSE"
                PuntCardLab:
                    pos_hint: {'center_x': .85,'center_y': -0.07}
                    text: "SSO"
                MDLabel:
                    pos_hint: {'center_x': 0.515,'center_y': 0.45}
                    size: self.texture_size 
                    canvas.before:
                        PushMatrix
                        Rotate:
                            # Kivy rota en sentido contrario al requerido
                            # además, dibujé orizontal (90° desplazado...)
                            angle: 360-root.a_viento+90
                            origin: self.center
                    canvas:
                        Color:
                            rgba:  1,.1,0,1    
                        Triangle:
                            points: self.center_x - self.center_x*.47, self.center_y,    self.center_x + self.center_x*.39, self.center_y+self.center_y*.08,    self.center_x +self.center_x*.39, self.center_y-self.center_y*.08
                        Triangle:
                            points: self.center_x + self.center_x*.39, self.center_y - self.center_y*.05,    self.center_x + self.center_x*.39, self.center_y + self.center_y*.05,    self.center_x+self.center_x*.53, self.center_y

                    canvas.after:
                        PopMatrix
            MDBoxLayout:
                size_hint: 1, .1 
                MDLabel:
                    pos_hint: {'right': 1.0,'top': 0.12}
                    font_size: 15
                    text: "V.: "+root.vrs
                    halign:"right"
    Screen:
        name: "conex_err"
        MDBoxLayout:
            md_bg_color: .9,0,.1
            orientation: 'vertical'
            MDLabel:
                size_hint: 1,.20
                text: "Falló la conexión con API meteorológica..."
                halign: "center"
                font_size: 50
                bold: True
                color: 1,1,1
            MDLabel:
                pos_hint: {'right': .9}
                size_hint: .8,.2
                halign: "center"
                valign: "middle"
                font_size: 25
                text: "Verifique conexión a internet y reinicie aplicación."
                color: 1,1,1
            MDLabel:
                pos_hint: {'right': .9}
                size_hint: .8,.6
                halign: "center"
                valign: "top"
                text: "[b]openmeteo = [/b]"+app.endp
                markup: True
                color: 1,1,1


<MetDat@MDCard>
    MDRelativeLayout:
        MDLabel:
            pos_hint: {'center_x': root.x_pos1,'center_y': 0.5}
            text: root.tit+":"
            font_size: 20
            halign: "center"
            markup: True
            multiline: True
            theme_text_color: "Custom"
            text_color: utils.get_color_from_hex(root.f_color)
        MDLabel:
            pos_hint: {'center_x': root.x_pos2,'center_y': 0.5}
            text: "[b]"+root.dat+"[/b]"
            markup: True
            font_size: 23
            halign: "center"
            theme_text_color: "Custom"
            text_color: "black"

<PuntCardLab@MDLabel>
    font_size: 20
    bold: True


<CiudItem>
    bg_color: 1,1,1,.1
    theme_text_color: "Custom"
    text_color: utils.get_color_from_hex('#ff9800')
    on_release: 
        root.click()
        # app.root.confirmar_ciud()